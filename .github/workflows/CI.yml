name: CI

on:
  pull_request:
  push:
    branches:
      - develop
      - master
      - 'release/*'
      - 'hotfix/*'
env:
  PERCY_PARALLEL_NONCE: ${{ github.run_id }}-${{ github.run_number }}
  PERCY_PARALLEL_TOTAL: 4

jobs:
  fetch-dependencies:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn --prefer-offline --frozen-lockfile --ignore-engines

  build:
    runs-on: ubuntu-latest
    needs: fetch-dependencies
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - run: yarn build:test
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist

  lint:
    runs-on: ubuntu-latest
    needs: fetch-dependencies
    steps:
    - uses: actions/checkout@v2
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - run: yarn lint

  test-partition-1:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - uses: percy/exec-action@v0.3.1
      with:
        custom-command: yarn test:ember --path ./dist --partition 1
      env:
        PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
        PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      timeout-minutes: 10

  test-partition-2:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - uses: percy/exec-action@v0.3.1
      with:
        custom-command: yarn test:ember --path ./dist --partition 2
      env:
        PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
        PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      timeout-minutes: 10

  test-partition-3:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - uses: percy/exec-action@v0.3.1
      with:
        custom-command: yarn test:ember --path ./dist --partition 3
      env:
        PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
        PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      timeout-minutes: 10

  test-partition-4:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - uses: volta-cli/action@v1
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - uses: percy/exec-action@v0.3.1
      with:
        custom-command: yarn test:ember --path ./dist --partition 4
      env:
        PERCY_PARALLEL_NONCE: ${{ env.PERCY_PARALLEL_NONCE }}
        PERCY_PARALLEL_TOTAL: ${{ env.PERCY_PARALLEL_TOTAL }}
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      timeout-minutes: 10

  # Coverage disabled while these are worked out:
  # https://github.com/babel/ember-cli-babel/issues/350
  # https://github.com/ember-cli/babel-plugin-ember-modules-api-polyfill/issues/112
  # test-with-coverage:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: volta-cli/action@v1
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: dist
  #       path: ./dist
  #   - id: cache-node-modules
  #     uses: actions/cache@v2
  #     with:
  #       path: ./node_modules
  #       key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: cached_node_modules_
  #   - run: yarn test:cover --path ./dist
  #   - name: Save code coverage artifact
  #     uses: actions/upload-artifact@v2
  #     with:
  #       name: coverage-info
  #       path: ./coverage/lcov.info
  #
  # send-coverage:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   needs: test
  #   steps:
  #   - uses: volta-cli/action@v1
  #   - uses: actions/download-artifact@v2
  #     with:
  #       name: coverage-info
  #       path: ./lcov.info
  #   - uses: actions/cache@v2
  #     with:
  #       path: ./node_modules
  #       key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
  #       restore-keys: cached_node_modules_
  #   - name: Generate coverage report
  #     env:
  #       COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
  #     run: yarn coveralls
  #
  #   - name: Send coverage report to coveralls
  #     uses: coverallsapp/github-action@master
  #     with:
  #       github-token: ${{ secrets.GITHUB_TOKEN }}
