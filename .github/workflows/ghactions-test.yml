name: gh-actions-test

on: [push, pull_request]

jobs:
  fetch-dependencies:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn --prefer-offline --frozen-lockfile --ignore-engines

  build:
    runs-on: ubuntu-latest
    needs: fetch-dependencies
    steps:
    - uses: actions/checkout@v2
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - run: yarn build:test
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist

  lint:
    runs-on: ubuntu-latest
    needs: fetch-dependencies
    steps:
    - uses: actions/checkout@v2
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - run: yarn lint:es
    - run: yarn lint:ts
    - run: yarn lint:style
    - run: yarn lint:template

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: ./dist
    - id: cache-node-modules
      uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - run: COVERAGE=true yarn test
      # timeout-minutes: 25
    - name: Save code coverage artifact
      uses: actions/upload-artifact@v2
      with:
        name: coverage-info
        path: ./coverage/lcov.info

  send-coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - uses: actions/download-artifact@v2
      with:
        name: coverage-info
        path: ./lcov.info
    - uses: actions/cache@v2
      with:
        path: ./node_modules
        key: cached_node_modules_${{ hashFiles('**/yarn.lock') }}
        restore-keys: cached_node_modules_
    - run: yarn coveralls
    - name: Coveralls
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}